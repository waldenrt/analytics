/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.brierley.avro.schemas;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class LifecycleResults extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8687664416577731356L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LifecycleResults\",\"namespace\":\"com.brierley.avro.schemas\",\"fields\":[{\"name\":\"jobKey\",\"type\":\"string\",\"doc\":\"unique job identifier\"},{\"name\":\"numRecords\",\"type\":\"long\",\"doc\":\"total number of records in the given dataset\"},{\"name\":\"completionTime\",\"type\":\"string\",\"doc\":\"The time the spark job finished and posted the results to kafka\"},{\"name\":\"minDate\",\"type\":\"string\",\"doc\":\"Beginning date after any required trimming based on given length of time\"},{\"name\":\"maxDate\",\"type\":\"string\",\"doc\":\"End date of the dataset after trimming to whole month/week\"},{\"name\":\"timePeriodLength\",\"type\":\"string\",\"doc\":\"The period length that the dataset should be split into, if 'ALL', the file was not split\"},{\"name\":\"lifecycleResults\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"lifecyleProfileResults\",\"doc\":\"Profile metrics for each time period, all metrics for a time period are on a single row\",\"fields\":[{\"name\":\"timePeriod\",\"type\":\"int\",\"doc\":\"number of time period, most recent dates = 1\"},{\"name\":\"totalCustCount\",\"type\":\"long\",\"doc\":\"Total number of customers across all segments in given timePeriod\"},{\"name\":\"totalTxnCount\",\"type\":\"long\",\"doc\":\"Total number of transactions across all segments in given timePeriod\"},{\"name\":\"totalSales\",\"type\":\"double\",\"doc\":\"Total amount in sales across all segments in given timePeriod\"},{\"name\":\"totalItems\",\"type\":\"long\",\"doc\":\"total number of items purchased across all segments for given timePeriod\"},{\"name\":\"bestCustTotal\",\"type\":\"long\",\"doc\":\"Total number of customers in Best in Class segment in given timePeriod\"},{\"name\":\"bestTxnTotal\",\"type\":\"long\",\"doc\":\"Total number of transactions in Best in Class segment in given timePeriod\"},{\"name\":\"bestSalesTotal\",\"type\":\"double\",\"doc\":\"Total amount of sales in Best in Class segment in given timePeriod\"},{\"name\":\"bestRecencyTotal\",\"type\":\"long\",\"doc\":\"Sum of all recency values in Best in Class segment in given timePeriod, used to calc avgs\"},{\"name\":\"bestItemTotal\",\"type\":\"long\",\"doc\":\"Total number of items purchased by Best in Class segment in given timePeriod\"},{\"name\":\"bestPercentCustBase\",\"type\":\"double\",\"doc\":\"bestCustTotal divided by totalCustCount\"},{\"name\":\"bestPercentTxnBase\",\"type\":\"double\",\"doc\":\"bestTxnTotal divided by totalTxnCount\"},{\"name\":\"bestPercentSalesBase\",\"type\":\"double\",\"doc\":\"bestSalesTotal divided by totalSales\"},{\"name\":\"bestAvgFreq\",\"type\":\"double\",\"doc\":\"bestFreqTotal divided by bestCustTotal\"},{\"name\":\"bestAvgRecency\",\"type\":\"double\",\"doc\":\"bestRecencyTotal divided by bestCustTotal\"},{\"name\":\"bestAvgSales\",\"type\":\"double\",\"doc\":\"bestSalesTotal divided by bestCustTotal\"},{\"name\":\"bestAvgItems\",\"type\":\"double\",\"doc\":\"bestItemTotal divided by bestCustTotal\"},{\"name\":\"bestVisitSpend\",\"type\":\"double\",\"doc\":\"bestSalesTotal divided by bestTxnTotal\"},{\"name\":\"risingCustTotal\",\"type\":\"long\",\"doc\":\"Total number of customers in Rising Stars segment in given timePeriod\"},{\"name\":\"risingTxnTotal\",\"type\":\"long\",\"doc\":\"Total number of transactions in Rising Stars segment in given timePeriod\"},{\"name\":\"risingSalesTotal\",\"type\":\"double\",\"doc\":\"Total amount of sales in Rising Stars segment in given timePeriod\"},{\"name\":\"risingRecencyTotal\",\"type\":\"long\",\"doc\":\"Sum of all recency values in Rising Stars segment in given timePeriod, used to calc avgs\"},{\"name\":\"risingItemTotal\",\"type\":\"long\",\"doc\":\"Total number of items purchased by Rising Stars segment in given timePeriod\"},{\"name\":\"risingPercentCustBase\",\"type\":\"double\",\"doc\":\"risingCustTotal divided by totalCustCount\"},{\"name\":\"risingPercentTxnBase\",\"type\":\"double\",\"doc\":\"risingTxnTotal divided by totalTxnCount\"},{\"name\":\"risingPercentSalesBase\",\"type\":\"double\",\"doc\":\"risingSalesTotal divided by totalSales\"},{\"name\":\"risingAvgFreq\",\"type\":\"double\",\"doc\":\"risingFreqTotal divided by risingCustTotal\"},{\"name\":\"risingAvgRecency\",\"type\":\"double\",\"doc\":\"risingRecencyTotal divided by risingCustTotal\"},{\"name\":\"risingAvgSales\",\"type\":\"double\",\"doc\":\"risingSalesTotal divided by risingCustTotal\"},{\"name\":\"risingAvgItems\",\"type\":\"double\",\"doc\":\"risingItemTotal divided by risingCustTotal\"},{\"name\":\"risingVisitSpend\",\"type\":\"double\",\"doc\":\"risingSalesTotal divided by risingTxnTotal\"},{\"name\":\"middleCustTotal\",\"type\":\"long\",\"doc\":\"Total number of customers in Middle of the Road segment in given timePeriod\"},{\"name\":\"middleTxnTotal\",\"type\":\"long\",\"doc\":\"Total number of transactions in Middle of the Road segment in given timePeriod\"},{\"name\":\"middleSalesTotal\",\"type\":\"double\",\"doc\":\"Total amount of sales in Middle of the Road segment in given timePeriod\"},{\"name\":\"middleRecencyTotal\",\"type\":\"long\",\"doc\":\"Sum of all recency values in Middle of the Road segment in given timePeriod, used to calc avgs\"},{\"name\":\"middleItemTotal\",\"type\":\"long\",\"doc\":\"Total number of items purchased by Middle of the Road segment in given timePeriod\"},{\"name\":\"middlePercentCustBase\",\"type\":\"double\",\"doc\":\"middleCustTotal divided by totalCustCount\"},{\"name\":\"middlePercentTxnBase\",\"type\":\"double\",\"doc\":\"middleTxnTotal divided by totalTxnCount\"},{\"name\":\"middlePercentSalesBase\",\"type\":\"double\",\"doc\":\"middleSalesTotal divided by totalSales\"},{\"name\":\"middleAvgFreq\",\"type\":\"double\",\"doc\":\"middleFreqTotal divided by middleCustTotal\"},{\"name\":\"middleAvgRecency\",\"type\":\"double\",\"doc\":\"middleRecencyTotal divided by middleCustTotal\"},{\"name\":\"middleAvgSales\",\"type\":\"double\",\"doc\":\"middleSalesTotal divided by middleCustTotal\"},{\"name\":\"middleAvgItems\",\"type\":\"double\",\"doc\":\"middleItemTotal divided by middleCustTotal\"},{\"name\":\"middleVisitSpend\",\"type\":\"double\",\"doc\":\"middleSalesTotal divided by middleTxnTotal\"},{\"name\":\"lapsingCustTotal\",\"type\":\"long\",\"doc\":\"Total number of customers in Lapsing in given timePeriod\"},{\"name\":\"lapsingTxnTotal\",\"type\":\"long\",\"doc\":\"Total number of transactions in Lapsing segment in given timePeriod\"},{\"name\":\"lapsingSalesTotal\",\"type\":\"double\",\"doc\":\"Total amount of sales in Lapsing segment in given timePeriod\"},{\"name\":\"lapsingRecencyTotal\",\"type\":\"long\",\"doc\":\"Sum of all recency values in Lapsing segment in given timePeriod, used to calc avgs\"},{\"name\":\"lapsingItemTotal\",\"type\":\"long\",\"doc\":\"Total number of items purchased by Lapsing segment in given timePeriod\"},{\"name\":\"lapsingPercentCustBase\",\"type\":\"double\",\"doc\":\"lapsingCustTotal divided by totalCustCount\"},{\"name\":\"lapsingPercentTxnBase\",\"type\":\"double\",\"doc\":\"lapsingTxnTotal divided by totalTxnCount\"},{\"name\":\"lapsingPercentSalesBase\",\"type\":\"double\",\"doc\":\"lapsingSalesTotal divided by totalSales\"},{\"name\":\"lapsingAvgFreq\",\"type\":\"double\",\"doc\":\"lapsingFreqTotal divided by lapsingCustTotal\"},{\"name\":\"lapsingAvgRecency\",\"type\":\"double\",\"doc\":\"lapsingRecencyTotal divided by lapsingCustTotal\"},{\"name\":\"lapsingAvgSales\",\"type\":\"double\",\"doc\":\"lapsingSalesTotal divided by lapsingCustTotal\"},{\"name\":\"lapsingAvgItems\",\"type\":\"double\",\"doc\":\"lapsingItemTotal divided by lapsingCustTotal\"},{\"name\":\"lapsingVisitSpend\",\"type\":\"double\",\"doc\":\"lapsingSalesTotal divided by lapsingTxnTotal\"},{\"name\":\"deeplyCustTotal\",\"type\":\"long\",\"doc\":\"Total number of customers in Best in Class segment in given timePeriod\"},{\"name\":\"deeplyTxnTotal\",\"type\":\"long\",\"doc\":\"Total number of transactions in Best in Class segment in given timePeriod\"},{\"name\":\"deeplySalesTotal\",\"type\":\"double\",\"doc\":\"Total amount of sales in Best in Class segment in given timePeriod\"},{\"name\":\"deeplyRecencyTotal\",\"type\":\"long\",\"doc\":\"Sum of all recency values in Best in Class segment in given timePeriod, used to calc avgs\"},{\"name\":\"deeplyItemTotal\",\"type\":\"long\",\"doc\":\"Total number of items purchased by Best in Class segment in given timePeriod\"},{\"name\":\"deeplyPercentCustBase\",\"type\":\"double\",\"doc\":\"deeplyCustTotal divided by totalCustCount\"},{\"name\":\"deeplyPercentTxnBase\",\"type\":\"double\",\"doc\":\"deeplyTxnTotal divided by totalTxnCount\"},{\"name\":\"deeplyPercentSalesBase\",\"type\":\"double\",\"doc\":\"deeplySalesTotal divided by totalSales\"},{\"name\":\"deeplyAvgFreq\",\"type\":\"double\",\"doc\":\"deeplyFreqTotal divided by deeplyCustTotal\"},{\"name\":\"deeplyAvgRecency\",\"type\":\"double\",\"doc\":\"deeplyRecencyTotal divided by deeplyCustTotal\"},{\"name\":\"deeplyAvgSales\",\"type\":\"double\",\"doc\":\"deeplySalesTotal divided by d","eeplyCustTotal\"},{\"name\":\"deeplyAvgItems\",\"type\":\"double\",\"doc\":\"deeplyItemTotal divided by deeplyCustTotal\"},{\"name\":\"deeplyVisitSpend\",\"type\":\"double\",\"doc\":\"deeplySalesTotal divided by deeplyTxnTotal\"}]}}},{\"name\":\"prodMetrics\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"lifecycleProdMetrics\",\"doc\":\"each record represents the results of a single product in a single timeperiod across all segments\",\"fields\":[{\"name\":\"timePeriod\",\"type\":\"int\",\"doc\":\"TimePeriod array is for\"},{\"name\":\"productCat\",\"type\":\"string\",\"doc\":\"The category identifier for the product (should be one of the top 3 levels of the hierarchy)\"},{\"name\":\"prodTotalSales\",\"type\":\"double\",\"doc\":\"The total sales for the product across all segments for given timePeriod\"},{\"name\":\"prodPercentSales\",\"type\":\"double\",\"doc\":\"Percent of sales this product makes up\"},{\"name\":\"totalSales\",\"type\":\"double\",\"doc\":\"Total sales of all products across all segments for given time period\"},{\"name\":\"bestProdSales\",\"type\":\"double\",\"doc\":\"total sales for given product in Best of Class segment\"},{\"name\":\"bestTotalSales\",\"type\":\"double\",\"doc\":\"total sales for segment across all products\"},{\"name\":\"bestPercentSales\",\"type\":\"double\",\"doc\":\"percent of sales this product makes up from segment\"},{\"name\":\"bestIndex\",\"type\":\"double\",\"doc\":\"index of sales compared to prodPercentSales\"},{\"name\":\"risingProdSales\",\"type\":\"double\",\"doc\":\"total sales for given product in Rising Stars segment\"},{\"name\":\"risingTotalSales\",\"type\":\"double\",\"doc\":\"total sales for segment across all products\"},{\"name\":\"risingPercentSales\",\"type\":\"double\",\"doc\":\"percent of sales this product makes up from segment\"},{\"name\":\"risingIndex\",\"type\":\"double\",\"doc\":\"index of sales compared to prodPercentSales\"},{\"name\":\"middleProdSales\",\"type\":\"double\",\"doc\":\"total sales for given product in Middle of the Road segment\"},{\"name\":\"middleTotalSales\",\"type\":\"double\",\"doc\":\"total sales for segment across all products\"},{\"name\":\"middlePercentSales\",\"type\":\"double\",\"doc\":\"percent of sales this product makes up from segment\"},{\"name\":\"middleIndex\",\"type\":\"double\",\"doc\":\"index of sales compared to prodPercentSales\"},{\"name\":\"lapsingProdSales\",\"type\":\"double\",\"doc\":\"total sales for given product in Lapsing segment\"},{\"name\":\"lapsingTotalSales\",\"type\":\"double\",\"doc\":\"total sales for segment across all products\"},{\"name\":\"lapsingPercentSales\",\"type\":\"double\",\"doc\":\"percent of sales this product makes up from segment\"},{\"name\":\"lapsingIndex\",\"type\":\"double\",\"doc\":\"index of sales compared to prodPercentSales\"},{\"name\":\"deeplyProdSales\",\"type\":\"double\",\"doc\":\"total sales for given product in Deeply Lapsed segment\"},{\"name\":\"deeplyTotalSales\",\"type\":\"double\",\"doc\":\"total sales for segment across all products\"},{\"name\":\"deeplyPercentSales\",\"type\":\"double\",\"doc\":\"percent of sales this product makes up from segment\"},{\"name\":\"deeplyIndex\",\"type\":\"double\",\"doc\":\"index of sales compared to prodPercentSales\"}]}}},{\"name\":\"migrationResults\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"lifecycleMigrationResults\",\"doc\":\"Each record gives data for a single time period, and contains arrays to hold all segment data\",\"fields\":[{\"name\":\"timePeriod\",\"type\":\"int\",\"doc\":\"Current Time period\"},{\"name\":\"migrationData\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"migrationArray\",\"fields\":[{\"name\":\"fromSegment\",\"type\":\"int\",\"doc\":\"Quantile that they were in for PREVIOUS time period\"},{\"name\":\"currentSegment\",\"type\":\"int\",\"doc\":\"Quantile that they belong to for CURRENT time period\"},{\"name\":\"migrationCount\",\"type\":\"long\",\"doc\":\"Total number that moved fromSegment -> currentSegment\"}]}}},{\"name\":\"segmentTotals\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"segmentCounts\",\"fields\":[{\"name\":\"bestTotalCount\",\"type\":\"long\",\"doc\":\"total number of customers in segment for given timePeriod\"},{\"name\":\"bestNewCount\",\"type\":\"long\",\"doc\":\"Count of those not seen in PREVIOUS period, those not represented in migrationArray\"},{\"name\":\"risingTotalCount\",\"type\":\"long\",\"doc\":\"total number of customers in segment for given timePeriod\"},{\"name\":\"risingNewCount\",\"type\":\"long\",\"doc\":\"Count of those not seen in PREVIOUS period, those not represented in migrationArray\"},{\"name\":\"middleTotalCount\",\"type\":\"long\",\"doc\":\"total number of customers in segment for given timePeriod\"},{\"name\":\"middleNewCount\",\"type\":\"long\",\"doc\":\"Count of those not seen in PREVIOUS period, those not represented in migrationArray\"},{\"name\":\"lapsingTotalCount\",\"type\":\"long\",\"doc\":\"total number of customers in segment for given timePeriod\"},{\"name\":\"lapsingNewCount\",\"type\":\"long\",\"doc\":\"Count of those not seen in PREVIOUS period, those not represented in migrationArray\"},{\"name\":\"deeplyTotalCount\",\"type\":\"long\",\"doc\":\"total number of customers in segment for given timePeriod\"},{\"name\":\"deeplyNewCount\",\"type\":\"long\",\"doc\":\"Count of those not seen in PREVIOUS period, those not represented in migrationArray\"}]}}}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** unique job identifier */
  @Deprecated public java.lang.CharSequence jobKey;
  /** total number of records in the given dataset */
  @Deprecated public long numRecords;
  /** The time the spark job finished and posted the results to kafka */
  @Deprecated public java.lang.CharSequence completionTime;
  /** Beginning date after any required trimming based on given length of time */
  @Deprecated public java.lang.CharSequence minDate;
  /** End date of the dataset after trimming to whole month/week */
  @Deprecated public java.lang.CharSequence maxDate;
  /** The period length that the dataset should be split into, if 'ALL', the file was not split */
  @Deprecated public java.lang.CharSequence timePeriodLength;
  @Deprecated public java.util.List<com.brierley.avro.schemas.lifecyleProfileResults> lifecycleResults;
  @Deprecated public java.util.List<com.brierley.avro.schemas.lifecycleProdMetrics> prodMetrics;
  @Deprecated public java.util.List<com.brierley.avro.schemas.lifecycleMigrationResults> migrationResults;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LifecycleResults() {}

  /**
   * All-args constructor.
   * @param jobKey unique job identifier
   * @param numRecords total number of records in the given dataset
   * @param completionTime The time the spark job finished and posted the results to kafka
   * @param minDate Beginning date after any required trimming based on given length of time
   * @param maxDate End date of the dataset after trimming to whole month/week
   * @param timePeriodLength The period length that the dataset should be split into, if 'ALL', the file was not split
   * @param lifecycleResults The new value for lifecycleResults
   * @param prodMetrics The new value for prodMetrics
   * @param migrationResults The new value for migrationResults
   */
  public LifecycleResults(java.lang.CharSequence jobKey, java.lang.Long numRecords, java.lang.CharSequence completionTime, java.lang.CharSequence minDate, java.lang.CharSequence maxDate, java.lang.CharSequence timePeriodLength, java.util.List<com.brierley.avro.schemas.lifecyleProfileResults> lifecycleResults, java.util.List<com.brierley.avro.schemas.lifecycleProdMetrics> prodMetrics, java.util.List<com.brierley.avro.schemas.lifecycleMigrationResults> migrationResults) {
    this.jobKey = jobKey;
    this.numRecords = numRecords;
    this.completionTime = completionTime;
    this.minDate = minDate;
    this.maxDate = maxDate;
    this.timePeriodLength = timePeriodLength;
    this.lifecycleResults = lifecycleResults;
    this.prodMetrics = prodMetrics;
    this.migrationResults = migrationResults;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return jobKey;
    case 1: return numRecords;
    case 2: return completionTime;
    case 3: return minDate;
    case 4: return maxDate;
    case 5: return timePeriodLength;
    case 6: return lifecycleResults;
    case 7: return prodMetrics;
    case 8: return migrationResults;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: jobKey = (java.lang.CharSequence)value$; break;
    case 1: numRecords = (java.lang.Long)value$; break;
    case 2: completionTime = (java.lang.CharSequence)value$; break;
    case 3: minDate = (java.lang.CharSequence)value$; break;
    case 4: maxDate = (java.lang.CharSequence)value$; break;
    case 5: timePeriodLength = (java.lang.CharSequence)value$; break;
    case 6: lifecycleResults = (java.util.List<com.brierley.avro.schemas.lifecyleProfileResults>)value$; break;
    case 7: prodMetrics = (java.util.List<com.brierley.avro.schemas.lifecycleProdMetrics>)value$; break;
    case 8: migrationResults = (java.util.List<com.brierley.avro.schemas.lifecycleMigrationResults>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'jobKey' field.
   * @return unique job identifier
   */
  public java.lang.CharSequence getJobKey() {
    return jobKey;
  }

  /**
   * Sets the value of the 'jobKey' field.
   * unique job identifier
   * @param value the value to set.
   */
  public void setJobKey(java.lang.CharSequence value) {
    this.jobKey = value;
  }

  /**
   * Gets the value of the 'numRecords' field.
   * @return total number of records in the given dataset
   */
  public java.lang.Long getNumRecords() {
    return numRecords;
  }

  /**
   * Sets the value of the 'numRecords' field.
   * total number of records in the given dataset
   * @param value the value to set.
   */
  public void setNumRecords(java.lang.Long value) {
    this.numRecords = value;
  }

  /**
   * Gets the value of the 'completionTime' field.
   * @return The time the spark job finished and posted the results to kafka
   */
  public java.lang.CharSequence getCompletionTime() {
    return completionTime;
  }

  /**
   * Sets the value of the 'completionTime' field.
   * The time the spark job finished and posted the results to kafka
   * @param value the value to set.
   */
  public void setCompletionTime(java.lang.CharSequence value) {
    this.completionTime = value;
  }

  /**
   * Gets the value of the 'minDate' field.
   * @return Beginning date after any required trimming based on given length of time
   */
  public java.lang.CharSequence getMinDate() {
    return minDate;
  }

  /**
   * Sets the value of the 'minDate' field.
   * Beginning date after any required trimming based on given length of time
   * @param value the value to set.
   */
  public void setMinDate(java.lang.CharSequence value) {
    this.minDate = value;
  }

  /**
   * Gets the value of the 'maxDate' field.
   * @return End date of the dataset after trimming to whole month/week
   */
  public java.lang.CharSequence getMaxDate() {
    return maxDate;
  }

  /**
   * Sets the value of the 'maxDate' field.
   * End date of the dataset after trimming to whole month/week
   * @param value the value to set.
   */
  public void setMaxDate(java.lang.CharSequence value) {
    this.maxDate = value;
  }

  /**
   * Gets the value of the 'timePeriodLength' field.
   * @return The period length that the dataset should be split into, if 'ALL', the file was not split
   */
  public java.lang.CharSequence getTimePeriodLength() {
    return timePeriodLength;
  }

  /**
   * Sets the value of the 'timePeriodLength' field.
   * The period length that the dataset should be split into, if 'ALL', the file was not split
   * @param value the value to set.
   */
  public void setTimePeriodLength(java.lang.CharSequence value) {
    this.timePeriodLength = value;
  }

  /**
   * Gets the value of the 'lifecycleResults' field.
   * @return The value of the 'lifecycleResults' field.
   */
  public java.util.List<com.brierley.avro.schemas.lifecyleProfileResults> getLifecycleResults() {
    return lifecycleResults;
  }

  /**
   * Sets the value of the 'lifecycleResults' field.
   * @param value the value to set.
   */
  public void setLifecycleResults(java.util.List<com.brierley.avro.schemas.lifecyleProfileResults> value) {
    this.lifecycleResults = value;
  }

  /**
   * Gets the value of the 'prodMetrics' field.
   * @return The value of the 'prodMetrics' field.
   */
  public java.util.List<com.brierley.avro.schemas.lifecycleProdMetrics> getProdMetrics() {
    return prodMetrics;
  }

  /**
   * Sets the value of the 'prodMetrics' field.
   * @param value the value to set.
   */
  public void setProdMetrics(java.util.List<com.brierley.avro.schemas.lifecycleProdMetrics> value) {
    this.prodMetrics = value;
  }

  /**
   * Gets the value of the 'migrationResults' field.
   * @return The value of the 'migrationResults' field.
   */
  public java.util.List<com.brierley.avro.schemas.lifecycleMigrationResults> getMigrationResults() {
    return migrationResults;
  }

  /**
   * Sets the value of the 'migrationResults' field.
   * @param value the value to set.
   */
  public void setMigrationResults(java.util.List<com.brierley.avro.schemas.lifecycleMigrationResults> value) {
    this.migrationResults = value;
  }

  /**
   * Creates a new LifecycleResults RecordBuilder.
   * @return A new LifecycleResults RecordBuilder
   */
  public static com.brierley.avro.schemas.LifecycleResults.Builder newBuilder() {
    return new com.brierley.avro.schemas.LifecycleResults.Builder();
  }

  /**
   * Creates a new LifecycleResults RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LifecycleResults RecordBuilder
   */
  public static com.brierley.avro.schemas.LifecycleResults.Builder newBuilder(com.brierley.avro.schemas.LifecycleResults.Builder other) {
    return new com.brierley.avro.schemas.LifecycleResults.Builder(other);
  }

  /**
   * Creates a new LifecycleResults RecordBuilder by copying an existing LifecycleResults instance.
   * @param other The existing instance to copy.
   * @return A new LifecycleResults RecordBuilder
   */
  public static com.brierley.avro.schemas.LifecycleResults.Builder newBuilder(com.brierley.avro.schemas.LifecycleResults other) {
    return new com.brierley.avro.schemas.LifecycleResults.Builder(other);
  }

  /**
   * RecordBuilder for LifecycleResults instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LifecycleResults>
    implements org.apache.avro.data.RecordBuilder<LifecycleResults> {

    /** unique job identifier */
    private java.lang.CharSequence jobKey;
    /** total number of records in the given dataset */
    private long numRecords;
    /** The time the spark job finished and posted the results to kafka */
    private java.lang.CharSequence completionTime;
    /** Beginning date after any required trimming based on given length of time */
    private java.lang.CharSequence minDate;
    /** End date of the dataset after trimming to whole month/week */
    private java.lang.CharSequence maxDate;
    /** The period length that the dataset should be split into, if 'ALL', the file was not split */
    private java.lang.CharSequence timePeriodLength;
    private java.util.List<com.brierley.avro.schemas.lifecyleProfileResults> lifecycleResults;
    private java.util.List<com.brierley.avro.schemas.lifecycleProdMetrics> prodMetrics;
    private java.util.List<com.brierley.avro.schemas.lifecycleMigrationResults> migrationResults;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.brierley.avro.schemas.LifecycleResults.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.jobKey)) {
        this.jobKey = data().deepCopy(fields()[0].schema(), other.jobKey);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.numRecords)) {
        this.numRecords = data().deepCopy(fields()[1].schema(), other.numRecords);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.completionTime)) {
        this.completionTime = data().deepCopy(fields()[2].schema(), other.completionTime);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.minDate)) {
        this.minDate = data().deepCopy(fields()[3].schema(), other.minDate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.maxDate)) {
        this.maxDate = data().deepCopy(fields()[4].schema(), other.maxDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.timePeriodLength)) {
        this.timePeriodLength = data().deepCopy(fields()[5].schema(), other.timePeriodLength);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.lifecycleResults)) {
        this.lifecycleResults = data().deepCopy(fields()[6].schema(), other.lifecycleResults);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.prodMetrics)) {
        this.prodMetrics = data().deepCopy(fields()[7].schema(), other.prodMetrics);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.migrationResults)) {
        this.migrationResults = data().deepCopy(fields()[8].schema(), other.migrationResults);
        fieldSetFlags()[8] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing LifecycleResults instance
     * @param other The existing instance to copy.
     */
    private Builder(com.brierley.avro.schemas.LifecycleResults other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.jobKey)) {
        this.jobKey = data().deepCopy(fields()[0].schema(), other.jobKey);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.numRecords)) {
        this.numRecords = data().deepCopy(fields()[1].schema(), other.numRecords);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.completionTime)) {
        this.completionTime = data().deepCopy(fields()[2].schema(), other.completionTime);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.minDate)) {
        this.minDate = data().deepCopy(fields()[3].schema(), other.minDate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.maxDate)) {
        this.maxDate = data().deepCopy(fields()[4].schema(), other.maxDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.timePeriodLength)) {
        this.timePeriodLength = data().deepCopy(fields()[5].schema(), other.timePeriodLength);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.lifecycleResults)) {
        this.lifecycleResults = data().deepCopy(fields()[6].schema(), other.lifecycleResults);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.prodMetrics)) {
        this.prodMetrics = data().deepCopy(fields()[7].schema(), other.prodMetrics);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.migrationResults)) {
        this.migrationResults = data().deepCopy(fields()[8].schema(), other.migrationResults);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'jobKey' field.
      * unique job identifier
      * @return The value.
      */
    public java.lang.CharSequence getJobKey() {
      return jobKey;
    }

    /**
      * Sets the value of the 'jobKey' field.
      * unique job identifier
      * @param value The value of 'jobKey'.
      * @return This builder.
      */
    public com.brierley.avro.schemas.LifecycleResults.Builder setJobKey(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.jobKey = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'jobKey' field has been set.
      * unique job identifier
      * @return True if the 'jobKey' field has been set, false otherwise.
      */
    public boolean hasJobKey() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'jobKey' field.
      * unique job identifier
      * @return This builder.
      */
    public com.brierley.avro.schemas.LifecycleResults.Builder clearJobKey() {
      jobKey = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'numRecords' field.
      * total number of records in the given dataset
      * @return The value.
      */
    public java.lang.Long getNumRecords() {
      return numRecords;
    }

    /**
      * Sets the value of the 'numRecords' field.
      * total number of records in the given dataset
      * @param value The value of 'numRecords'.
      * @return This builder.
      */
    public com.brierley.avro.schemas.LifecycleResults.Builder setNumRecords(long value) {
      validate(fields()[1], value);
      this.numRecords = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'numRecords' field has been set.
      * total number of records in the given dataset
      * @return True if the 'numRecords' field has been set, false otherwise.
      */
    public boolean hasNumRecords() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'numRecords' field.
      * total number of records in the given dataset
      * @return This builder.
      */
    public com.brierley.avro.schemas.LifecycleResults.Builder clearNumRecords() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'completionTime' field.
      * The time the spark job finished and posted the results to kafka
      * @return The value.
      */
    public java.lang.CharSequence getCompletionTime() {
      return completionTime;
    }

    /**
      * Sets the value of the 'completionTime' field.
      * The time the spark job finished and posted the results to kafka
      * @param value The value of 'completionTime'.
      * @return This builder.
      */
    public com.brierley.avro.schemas.LifecycleResults.Builder setCompletionTime(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.completionTime = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'completionTime' field has been set.
      * The time the spark job finished and posted the results to kafka
      * @return True if the 'completionTime' field has been set, false otherwise.
      */
    public boolean hasCompletionTime() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'completionTime' field.
      * The time the spark job finished and posted the results to kafka
      * @return This builder.
      */
    public com.brierley.avro.schemas.LifecycleResults.Builder clearCompletionTime() {
      completionTime = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'minDate' field.
      * Beginning date after any required trimming based on given length of time
      * @return The value.
      */
    public java.lang.CharSequence getMinDate() {
      return minDate;
    }

    /**
      * Sets the value of the 'minDate' field.
      * Beginning date after any required trimming based on given length of time
      * @param value The value of 'minDate'.
      * @return This builder.
      */
    public com.brierley.avro.schemas.LifecycleResults.Builder setMinDate(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.minDate = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'minDate' field has been set.
      * Beginning date after any required trimming based on given length of time
      * @return True if the 'minDate' field has been set, false otherwise.
      */
    public boolean hasMinDate() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'minDate' field.
      * Beginning date after any required trimming based on given length of time
      * @return This builder.
      */
    public com.brierley.avro.schemas.LifecycleResults.Builder clearMinDate() {
      minDate = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'maxDate' field.
      * End date of the dataset after trimming to whole month/week
      * @return The value.
      */
    public java.lang.CharSequence getMaxDate() {
      return maxDate;
    }

    /**
      * Sets the value of the 'maxDate' field.
      * End date of the dataset after trimming to whole month/week
      * @param value The value of 'maxDate'.
      * @return This builder.
      */
    public com.brierley.avro.schemas.LifecycleResults.Builder setMaxDate(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.maxDate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'maxDate' field has been set.
      * End date of the dataset after trimming to whole month/week
      * @return True if the 'maxDate' field has been set, false otherwise.
      */
    public boolean hasMaxDate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'maxDate' field.
      * End date of the dataset after trimming to whole month/week
      * @return This builder.
      */
    public com.brierley.avro.schemas.LifecycleResults.Builder clearMaxDate() {
      maxDate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'timePeriodLength' field.
      * The period length that the dataset should be split into, if 'ALL', the file was not split
      * @return The value.
      */
    public java.lang.CharSequence getTimePeriodLength() {
      return timePeriodLength;
    }

    /**
      * Sets the value of the 'timePeriodLength' field.
      * The period length that the dataset should be split into, if 'ALL', the file was not split
      * @param value The value of 'timePeriodLength'.
      * @return This builder.
      */
    public com.brierley.avro.schemas.LifecycleResults.Builder setTimePeriodLength(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.timePeriodLength = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'timePeriodLength' field has been set.
      * The period length that the dataset should be split into, if 'ALL', the file was not split
      * @return True if the 'timePeriodLength' field has been set, false otherwise.
      */
    public boolean hasTimePeriodLength() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'timePeriodLength' field.
      * The period length that the dataset should be split into, if 'ALL', the file was not split
      * @return This builder.
      */
    public com.brierley.avro.schemas.LifecycleResults.Builder clearTimePeriodLength() {
      timePeriodLength = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'lifecycleResults' field.
      * @return The value.
      */
    public java.util.List<com.brierley.avro.schemas.lifecyleProfileResults> getLifecycleResults() {
      return lifecycleResults;
    }

    /**
      * Sets the value of the 'lifecycleResults' field.
      * @param value The value of 'lifecycleResults'.
      * @return This builder.
      */
    public com.brierley.avro.schemas.LifecycleResults.Builder setLifecycleResults(java.util.List<com.brierley.avro.schemas.lifecyleProfileResults> value) {
      validate(fields()[6], value);
      this.lifecycleResults = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'lifecycleResults' field has been set.
      * @return True if the 'lifecycleResults' field has been set, false otherwise.
      */
    public boolean hasLifecycleResults() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'lifecycleResults' field.
      * @return This builder.
      */
    public com.brierley.avro.schemas.LifecycleResults.Builder clearLifecycleResults() {
      lifecycleResults = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'prodMetrics' field.
      * @return The value.
      */
    public java.util.List<com.brierley.avro.schemas.lifecycleProdMetrics> getProdMetrics() {
      return prodMetrics;
    }

    /**
      * Sets the value of the 'prodMetrics' field.
      * @param value The value of 'prodMetrics'.
      * @return This builder.
      */
    public com.brierley.avro.schemas.LifecycleResults.Builder setProdMetrics(java.util.List<com.brierley.avro.schemas.lifecycleProdMetrics> value) {
      validate(fields()[7], value);
      this.prodMetrics = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'prodMetrics' field has been set.
      * @return True if the 'prodMetrics' field has been set, false otherwise.
      */
    public boolean hasProdMetrics() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'prodMetrics' field.
      * @return This builder.
      */
    public com.brierley.avro.schemas.LifecycleResults.Builder clearProdMetrics() {
      prodMetrics = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'migrationResults' field.
      * @return The value.
      */
    public java.util.List<com.brierley.avro.schemas.lifecycleMigrationResults> getMigrationResults() {
      return migrationResults;
    }

    /**
      * Sets the value of the 'migrationResults' field.
      * @param value The value of 'migrationResults'.
      * @return This builder.
      */
    public com.brierley.avro.schemas.LifecycleResults.Builder setMigrationResults(java.util.List<com.brierley.avro.schemas.lifecycleMigrationResults> value) {
      validate(fields()[8], value);
      this.migrationResults = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'migrationResults' field has been set.
      * @return True if the 'migrationResults' field has been set, false otherwise.
      */
    public boolean hasMigrationResults() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'migrationResults' field.
      * @return This builder.
      */
    public com.brierley.avro.schemas.LifecycleResults.Builder clearMigrationResults() {
      migrationResults = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public LifecycleResults build() {
      try {
        LifecycleResults record = new LifecycleResults();
        record.jobKey = fieldSetFlags()[0] ? this.jobKey : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.numRecords = fieldSetFlags()[1] ? this.numRecords : (java.lang.Long) defaultValue(fields()[1]);
        record.completionTime = fieldSetFlags()[2] ? this.completionTime : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.minDate = fieldSetFlags()[3] ? this.minDate : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.maxDate = fieldSetFlags()[4] ? this.maxDate : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.timePeriodLength = fieldSetFlags()[5] ? this.timePeriodLength : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.lifecycleResults = fieldSetFlags()[6] ? this.lifecycleResults : (java.util.List<com.brierley.avro.schemas.lifecyleProfileResults>) defaultValue(fields()[6]);
        record.prodMetrics = fieldSetFlags()[7] ? this.prodMetrics : (java.util.List<com.brierley.avro.schemas.lifecycleProdMetrics>) defaultValue(fields()[7]);
        record.migrationResults = fieldSetFlags()[8] ? this.migrationResults : (java.util.List<com.brierley.avro.schemas.lifecycleMigrationResults>) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
