/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.brierley.avro.schemas;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** each record represents the results of single period of time */
@org.apache.avro.specific.AvroGenerated
public class quantileProductResults extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4104291685366627615L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"quantileProductResults\",\"namespace\":\"com.brierley.avro.schemas\",\"doc\":\"each record represents the results of single period of time\",\"fields\":[{\"name\":\"timePeriod\",\"type\":\"int\",\"doc\":\"Quantile Period, calculated ascending\"},{\"name\":\"anchorDate\",\"type\":\"string\",\"doc\":\"The first date of the TimePeriod, formatted 'MMM yyyy'\"},{\"name\":\"quantile\",\"type\":\"int\",\"doc\":\"Quantile bucket\"},{\"name\":\"columnName\",\"type\":\"string\",\"doc\":\"Which input product column are these rankings for, user defines columns\"},{\"name\":\"ProductSpend\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"productSpend\",\"fields\":[{\"name\":\"product\",\"type\":\"string\"},{\"name\":\"rank\",\"type\":\"int\"},{\"name\":\"spend\",\"type\":\"double\"},{\"name\":\"position\",\"type\":\"string\"}]}},\"doc\":\"Top products by spend, per quantile group, defaults to 10 products\"},{\"name\":\"ProductCount\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"productCount\",\"fields\":[{\"name\":\"product\",\"type\":\"string\"},{\"name\":\"rank\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"long\"},{\"name\":\"position\",\"type\":\"string\"}]}},\"doc\":\"Top products by total units purchased per quantile group, defaults to 10 products\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Quantile Period, calculated ascending */
  @Deprecated public int timePeriod;
  /** The first date of the TimePeriod, formatted 'MMM yyyy' */
  @Deprecated public java.lang.CharSequence anchorDate;
  /** Quantile bucket */
  @Deprecated public int quantile;
  /** Which input product column are these rankings for, user defines columns */
  @Deprecated public java.lang.CharSequence columnName;
  /** Top products by spend, per quantile group, defaults to 10 products */
  @Deprecated public java.util.List<com.brierley.avro.schemas.productSpend> ProductSpend;
  /** Top products by total units purchased per quantile group, defaults to 10 products */
  @Deprecated public java.util.List<com.brierley.avro.schemas.productCount> ProductCount;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public quantileProductResults() {}

  /**
   * All-args constructor.
   * @param timePeriod Quantile Period, calculated ascending
   * @param anchorDate The first date of the TimePeriod, formatted 'MMM yyyy'
   * @param quantile Quantile bucket
   * @param columnName Which input product column are these rankings for, user defines columns
   * @param ProductSpend Top products by spend, per quantile group, defaults to 10 products
   * @param ProductCount Top products by total units purchased per quantile group, defaults to 10 products
   */
  public quantileProductResults(java.lang.Integer timePeriod, java.lang.CharSequence anchorDate, java.lang.Integer quantile, java.lang.CharSequence columnName, java.util.List<com.brierley.avro.schemas.productSpend> ProductSpend, java.util.List<com.brierley.avro.schemas.productCount> ProductCount) {
    this.timePeriod = timePeriod;
    this.anchorDate = anchorDate;
    this.quantile = quantile;
    this.columnName = columnName;
    this.ProductSpend = ProductSpend;
    this.ProductCount = ProductCount;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return timePeriod;
    case 1: return anchorDate;
    case 2: return quantile;
    case 3: return columnName;
    case 4: return ProductSpend;
    case 5: return ProductCount;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: timePeriod = (java.lang.Integer)value$; break;
    case 1: anchorDate = (java.lang.CharSequence)value$; break;
    case 2: quantile = (java.lang.Integer)value$; break;
    case 3: columnName = (java.lang.CharSequence)value$; break;
    case 4: ProductSpend = (java.util.List<com.brierley.avro.schemas.productSpend>)value$; break;
    case 5: ProductCount = (java.util.List<com.brierley.avro.schemas.productCount>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'timePeriod' field.
   * @return Quantile Period, calculated ascending
   */
  public java.lang.Integer getTimePeriod() {
    return timePeriod;
  }

  /**
   * Sets the value of the 'timePeriod' field.
   * Quantile Period, calculated ascending
   * @param value the value to set.
   */
  public void setTimePeriod(java.lang.Integer value) {
    this.timePeriod = value;
  }

  /**
   * Gets the value of the 'anchorDate' field.
   * @return The first date of the TimePeriod, formatted 'MMM yyyy'
   */
  public java.lang.CharSequence getAnchorDate() {
    return anchorDate;
  }

  /**
   * Sets the value of the 'anchorDate' field.
   * The first date of the TimePeriod, formatted 'MMM yyyy'
   * @param value the value to set.
   */
  public void setAnchorDate(java.lang.CharSequence value) {
    this.anchorDate = value;
  }

  /**
   * Gets the value of the 'quantile' field.
   * @return Quantile bucket
   */
  public java.lang.Integer getQuantile() {
    return quantile;
  }

  /**
   * Sets the value of the 'quantile' field.
   * Quantile bucket
   * @param value the value to set.
   */
  public void setQuantile(java.lang.Integer value) {
    this.quantile = value;
  }

  /**
   * Gets the value of the 'columnName' field.
   * @return Which input product column are these rankings for, user defines columns
   */
  public java.lang.CharSequence getColumnName() {
    return columnName;
  }

  /**
   * Sets the value of the 'columnName' field.
   * Which input product column are these rankings for, user defines columns
   * @param value the value to set.
   */
  public void setColumnName(java.lang.CharSequence value) {
    this.columnName = value;
  }

  /**
   * Gets the value of the 'ProductSpend' field.
   * @return Top products by spend, per quantile group, defaults to 10 products
   */
  public java.util.List<com.brierley.avro.schemas.productSpend> getProductSpend() {
    return ProductSpend;
  }

  /**
   * Sets the value of the 'ProductSpend' field.
   * Top products by spend, per quantile group, defaults to 10 products
   * @param value the value to set.
   */
  public void setProductSpend(java.util.List<com.brierley.avro.schemas.productSpend> value) {
    this.ProductSpend = value;
  }

  /**
   * Gets the value of the 'ProductCount' field.
   * @return Top products by total units purchased per quantile group, defaults to 10 products
   */
  public java.util.List<com.brierley.avro.schemas.productCount> getProductCount() {
    return ProductCount;
  }

  /**
   * Sets the value of the 'ProductCount' field.
   * Top products by total units purchased per quantile group, defaults to 10 products
   * @param value the value to set.
   */
  public void setProductCount(java.util.List<com.brierley.avro.schemas.productCount> value) {
    this.ProductCount = value;
  }

  /**
   * Creates a new quantileProductResults RecordBuilder.
   * @return A new quantileProductResults RecordBuilder
   */
  public static com.brierley.avro.schemas.quantileProductResults.Builder newBuilder() {
    return new com.brierley.avro.schemas.quantileProductResults.Builder();
  }

  /**
   * Creates a new quantileProductResults RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new quantileProductResults RecordBuilder
   */
  public static com.brierley.avro.schemas.quantileProductResults.Builder newBuilder(com.brierley.avro.schemas.quantileProductResults.Builder other) {
    return new com.brierley.avro.schemas.quantileProductResults.Builder(other);
  }

  /**
   * Creates a new quantileProductResults RecordBuilder by copying an existing quantileProductResults instance.
   * @param other The existing instance to copy.
   * @return A new quantileProductResults RecordBuilder
   */
  public static com.brierley.avro.schemas.quantileProductResults.Builder newBuilder(com.brierley.avro.schemas.quantileProductResults other) {
    return new com.brierley.avro.schemas.quantileProductResults.Builder(other);
  }

  /**
   * RecordBuilder for quantileProductResults instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<quantileProductResults>
    implements org.apache.avro.data.RecordBuilder<quantileProductResults> {

    /** Quantile Period, calculated ascending */
    private int timePeriod;
    /** The first date of the TimePeriod, formatted 'MMM yyyy' */
    private java.lang.CharSequence anchorDate;
    /** Quantile bucket */
    private int quantile;
    /** Which input product column are these rankings for, user defines columns */
    private java.lang.CharSequence columnName;
    /** Top products by spend, per quantile group, defaults to 10 products */
    private java.util.List<com.brierley.avro.schemas.productSpend> ProductSpend;
    /** Top products by total units purchased per quantile group, defaults to 10 products */
    private java.util.List<com.brierley.avro.schemas.productCount> ProductCount;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.brierley.avro.schemas.quantileProductResults.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.timePeriod)) {
        this.timePeriod = data().deepCopy(fields()[0].schema(), other.timePeriod);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.anchorDate)) {
        this.anchorDate = data().deepCopy(fields()[1].schema(), other.anchorDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.quantile)) {
        this.quantile = data().deepCopy(fields()[2].schema(), other.quantile);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.columnName)) {
        this.columnName = data().deepCopy(fields()[3].schema(), other.columnName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ProductSpend)) {
        this.ProductSpend = data().deepCopy(fields()[4].schema(), other.ProductSpend);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.ProductCount)) {
        this.ProductCount = data().deepCopy(fields()[5].schema(), other.ProductCount);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing quantileProductResults instance
     * @param other The existing instance to copy.
     */
    private Builder(com.brierley.avro.schemas.quantileProductResults other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.timePeriod)) {
        this.timePeriod = data().deepCopy(fields()[0].schema(), other.timePeriod);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.anchorDate)) {
        this.anchorDate = data().deepCopy(fields()[1].schema(), other.anchorDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.quantile)) {
        this.quantile = data().deepCopy(fields()[2].schema(), other.quantile);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.columnName)) {
        this.columnName = data().deepCopy(fields()[3].schema(), other.columnName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ProductSpend)) {
        this.ProductSpend = data().deepCopy(fields()[4].schema(), other.ProductSpend);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.ProductCount)) {
        this.ProductCount = data().deepCopy(fields()[5].schema(), other.ProductCount);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'timePeriod' field.
      * Quantile Period, calculated ascending
      * @return The value.
      */
    public java.lang.Integer getTimePeriod() {
      return timePeriod;
    }

    /**
      * Sets the value of the 'timePeriod' field.
      * Quantile Period, calculated ascending
      * @param value The value of 'timePeriod'.
      * @return This builder.
      */
    public com.brierley.avro.schemas.quantileProductResults.Builder setTimePeriod(int value) {
      validate(fields()[0], value);
      this.timePeriod = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'timePeriod' field has been set.
      * Quantile Period, calculated ascending
      * @return True if the 'timePeriod' field has been set, false otherwise.
      */
    public boolean hasTimePeriod() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'timePeriod' field.
      * Quantile Period, calculated ascending
      * @return This builder.
      */
    public com.brierley.avro.schemas.quantileProductResults.Builder clearTimePeriod() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'anchorDate' field.
      * The first date of the TimePeriod, formatted 'MMM yyyy'
      * @return The value.
      */
    public java.lang.CharSequence getAnchorDate() {
      return anchorDate;
    }

    /**
      * Sets the value of the 'anchorDate' field.
      * The first date of the TimePeriod, formatted 'MMM yyyy'
      * @param value The value of 'anchorDate'.
      * @return This builder.
      */
    public com.brierley.avro.schemas.quantileProductResults.Builder setAnchorDate(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.anchorDate = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'anchorDate' field has been set.
      * The first date of the TimePeriod, formatted 'MMM yyyy'
      * @return True if the 'anchorDate' field has been set, false otherwise.
      */
    public boolean hasAnchorDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'anchorDate' field.
      * The first date of the TimePeriod, formatted 'MMM yyyy'
      * @return This builder.
      */
    public com.brierley.avro.schemas.quantileProductResults.Builder clearAnchorDate() {
      anchorDate = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'quantile' field.
      * Quantile bucket
      * @return The value.
      */
    public java.lang.Integer getQuantile() {
      return quantile;
    }

    /**
      * Sets the value of the 'quantile' field.
      * Quantile bucket
      * @param value The value of 'quantile'.
      * @return This builder.
      */
    public com.brierley.avro.schemas.quantileProductResults.Builder setQuantile(int value) {
      validate(fields()[2], value);
      this.quantile = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'quantile' field has been set.
      * Quantile bucket
      * @return True if the 'quantile' field has been set, false otherwise.
      */
    public boolean hasQuantile() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'quantile' field.
      * Quantile bucket
      * @return This builder.
      */
    public com.brierley.avro.schemas.quantileProductResults.Builder clearQuantile() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'columnName' field.
      * Which input product column are these rankings for, user defines columns
      * @return The value.
      */
    public java.lang.CharSequence getColumnName() {
      return columnName;
    }

    /**
      * Sets the value of the 'columnName' field.
      * Which input product column are these rankings for, user defines columns
      * @param value The value of 'columnName'.
      * @return This builder.
      */
    public com.brierley.avro.schemas.quantileProductResults.Builder setColumnName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.columnName = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'columnName' field has been set.
      * Which input product column are these rankings for, user defines columns
      * @return True if the 'columnName' field has been set, false otherwise.
      */
    public boolean hasColumnName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'columnName' field.
      * Which input product column are these rankings for, user defines columns
      * @return This builder.
      */
    public com.brierley.avro.schemas.quantileProductResults.Builder clearColumnName() {
      columnName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'ProductSpend' field.
      * Top products by spend, per quantile group, defaults to 10 products
      * @return The value.
      */
    public java.util.List<com.brierley.avro.schemas.productSpend> getProductSpend() {
      return ProductSpend;
    }

    /**
      * Sets the value of the 'ProductSpend' field.
      * Top products by spend, per quantile group, defaults to 10 products
      * @param value The value of 'ProductSpend'.
      * @return This builder.
      */
    public com.brierley.avro.schemas.quantileProductResults.Builder setProductSpend(java.util.List<com.brierley.avro.schemas.productSpend> value) {
      validate(fields()[4], value);
      this.ProductSpend = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'ProductSpend' field has been set.
      * Top products by spend, per quantile group, defaults to 10 products
      * @return True if the 'ProductSpend' field has been set, false otherwise.
      */
    public boolean hasProductSpend() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'ProductSpend' field.
      * Top products by spend, per quantile group, defaults to 10 products
      * @return This builder.
      */
    public com.brierley.avro.schemas.quantileProductResults.Builder clearProductSpend() {
      ProductSpend = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'ProductCount' field.
      * Top products by total units purchased per quantile group, defaults to 10 products
      * @return The value.
      */
    public java.util.List<com.brierley.avro.schemas.productCount> getProductCount() {
      return ProductCount;
    }

    /**
      * Sets the value of the 'ProductCount' field.
      * Top products by total units purchased per quantile group, defaults to 10 products
      * @param value The value of 'ProductCount'.
      * @return This builder.
      */
    public com.brierley.avro.schemas.quantileProductResults.Builder setProductCount(java.util.List<com.brierley.avro.schemas.productCount> value) {
      validate(fields()[5], value);
      this.ProductCount = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'ProductCount' field has been set.
      * Top products by total units purchased per quantile group, defaults to 10 products
      * @return True if the 'ProductCount' field has been set, false otherwise.
      */
    public boolean hasProductCount() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'ProductCount' field.
      * Top products by total units purchased per quantile group, defaults to 10 products
      * @return This builder.
      */
    public com.brierley.avro.schemas.quantileProductResults.Builder clearProductCount() {
      ProductCount = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public quantileProductResults build() {
      try {
        quantileProductResults record = new quantileProductResults();
        record.timePeriod = fieldSetFlags()[0] ? this.timePeriod : (java.lang.Integer) defaultValue(fields()[0]);
        record.anchorDate = fieldSetFlags()[1] ? this.anchorDate : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.quantile = fieldSetFlags()[2] ? this.quantile : (java.lang.Integer) defaultValue(fields()[2]);
        record.columnName = fieldSetFlags()[3] ? this.columnName : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.ProductSpend = fieldSetFlags()[4] ? this.ProductSpend : (java.util.List<com.brierley.avro.schemas.productSpend>) defaultValue(fields()[4]);
        record.ProductCount = fieldSetFlags()[5] ? this.ProductCount : (java.util.List<com.brierley.avro.schemas.productCount>) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
