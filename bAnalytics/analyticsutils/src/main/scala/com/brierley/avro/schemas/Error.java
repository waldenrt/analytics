/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.brierley.avro.schemas;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Error extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7138796032186297145L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Error\",\"namespace\":\"com.brierley.avro.schemas\",\"fields\":[{\"name\":\"jobKey\",\"type\":\"string\",\"doc\":\"unique job identifier to find results in hbase\"},{\"name\":\"jobType\",\"type\":\"string\",\"doc\":\"Jar that is throwing the error, i.e. Balor, Cadence, bRelevant, Decile, etc\"},{\"name\":\"errorInfo\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"exception\",\"fields\":[{\"name\":\"className\",\"type\":\"string\",\"doc\":\"The class that is throwing the error\"},{\"name\":\"methodName\",\"type\":\"string\",\"doc\":\"The method that is throwing the error\"},{\"name\":\"exceptionMsg\",\"type\":\"string\",\"doc\":\"The main message of the exception, can be user defined, or the title of the exception\"},{\"name\":\"stackTrace\",\"type\":\"string\",\"doc\":\"The StackTrace for system thrown exceptions, optional\"},{\"name\":\"exceptionType\",\"type\":\"string\",\"doc\":\"What kind of exception is it, validation, system, user, etc.\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** unique job identifier to find results in hbase */
  @Deprecated public java.lang.CharSequence jobKey;
  /** Jar that is throwing the error, i.e. Balor, Cadence, bRelevant, Decile, etc */
  @Deprecated public java.lang.CharSequence jobType;
  @Deprecated public java.util.List<com.brierley.avro.schemas.exception> errorInfo;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Error() {}

  /**
   * All-args constructor.
   * @param jobKey unique job identifier to find results in hbase
   * @param jobType Jar that is throwing the error, i.e. Balor, Cadence, bRelevant, Decile, etc
   * @param errorInfo The new value for errorInfo
   */
  public Error(java.lang.CharSequence jobKey, java.lang.CharSequence jobType, java.util.List<com.brierley.avro.schemas.exception> errorInfo) {
    this.jobKey = jobKey;
    this.jobType = jobType;
    this.errorInfo = errorInfo;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return jobKey;
    case 1: return jobType;
    case 2: return errorInfo;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: jobKey = (java.lang.CharSequence)value$; break;
    case 1: jobType = (java.lang.CharSequence)value$; break;
    case 2: errorInfo = (java.util.List<com.brierley.avro.schemas.exception>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'jobKey' field.
   * @return unique job identifier to find results in hbase
   */
  public java.lang.CharSequence getJobKey() {
    return jobKey;
  }

  /**
   * Sets the value of the 'jobKey' field.
   * unique job identifier to find results in hbase
   * @param value the value to set.
   */
  public void setJobKey(java.lang.CharSequence value) {
    this.jobKey = value;
  }

  /**
   * Gets the value of the 'jobType' field.
   * @return Jar that is throwing the error, i.e. Balor, Cadence, bRelevant, Decile, etc
   */
  public java.lang.CharSequence getJobType() {
    return jobType;
  }

  /**
   * Sets the value of the 'jobType' field.
   * Jar that is throwing the error, i.e. Balor, Cadence, bRelevant, Decile, etc
   * @param value the value to set.
   */
  public void setJobType(java.lang.CharSequence value) {
    this.jobType = value;
  }

  /**
   * Gets the value of the 'errorInfo' field.
   * @return The value of the 'errorInfo' field.
   */
  public java.util.List<com.brierley.avro.schemas.exception> getErrorInfo() {
    return errorInfo;
  }

  /**
   * Sets the value of the 'errorInfo' field.
   * @param value the value to set.
   */
  public void setErrorInfo(java.util.List<com.brierley.avro.schemas.exception> value) {
    this.errorInfo = value;
  }

  /**
   * Creates a new Error RecordBuilder.
   * @return A new Error RecordBuilder
   */
  public static com.brierley.avro.schemas.Error.Builder newBuilder() {
    return new com.brierley.avro.schemas.Error.Builder();
  }

  /**
   * Creates a new Error RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Error RecordBuilder
   */
  public static com.brierley.avro.schemas.Error.Builder newBuilder(com.brierley.avro.schemas.Error.Builder other) {
    return new com.brierley.avro.schemas.Error.Builder(other);
  }

  /**
   * Creates a new Error RecordBuilder by copying an existing Error instance.
   * @param other The existing instance to copy.
   * @return A new Error RecordBuilder
   */
  public static com.brierley.avro.schemas.Error.Builder newBuilder(com.brierley.avro.schemas.Error other) {
    return new com.brierley.avro.schemas.Error.Builder(other);
  }

  /**
   * RecordBuilder for Error instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Error>
    implements org.apache.avro.data.RecordBuilder<Error> {

    /** unique job identifier to find results in hbase */
    private java.lang.CharSequence jobKey;
    /** Jar that is throwing the error, i.e. Balor, Cadence, bRelevant, Decile, etc */
    private java.lang.CharSequence jobType;
    private java.util.List<com.brierley.avro.schemas.exception> errorInfo;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.brierley.avro.schemas.Error.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.jobKey)) {
        this.jobKey = data().deepCopy(fields()[0].schema(), other.jobKey);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.jobType)) {
        this.jobType = data().deepCopy(fields()[1].schema(), other.jobType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.errorInfo)) {
        this.errorInfo = data().deepCopy(fields()[2].schema(), other.errorInfo);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Error instance
     * @param other The existing instance to copy.
     */
    private Builder(com.brierley.avro.schemas.Error other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.jobKey)) {
        this.jobKey = data().deepCopy(fields()[0].schema(), other.jobKey);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.jobType)) {
        this.jobType = data().deepCopy(fields()[1].schema(), other.jobType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.errorInfo)) {
        this.errorInfo = data().deepCopy(fields()[2].schema(), other.errorInfo);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'jobKey' field.
      * unique job identifier to find results in hbase
      * @return The value.
      */
    public java.lang.CharSequence getJobKey() {
      return jobKey;
    }

    /**
      * Sets the value of the 'jobKey' field.
      * unique job identifier to find results in hbase
      * @param value The value of 'jobKey'.
      * @return This builder.
      */
    public com.brierley.avro.schemas.Error.Builder setJobKey(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.jobKey = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'jobKey' field has been set.
      * unique job identifier to find results in hbase
      * @return True if the 'jobKey' field has been set, false otherwise.
      */
    public boolean hasJobKey() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'jobKey' field.
      * unique job identifier to find results in hbase
      * @return This builder.
      */
    public com.brierley.avro.schemas.Error.Builder clearJobKey() {
      jobKey = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'jobType' field.
      * Jar that is throwing the error, i.e. Balor, Cadence, bRelevant, Decile, etc
      * @return The value.
      */
    public java.lang.CharSequence getJobType() {
      return jobType;
    }

    /**
      * Sets the value of the 'jobType' field.
      * Jar that is throwing the error, i.e. Balor, Cadence, bRelevant, Decile, etc
      * @param value The value of 'jobType'.
      * @return This builder.
      */
    public com.brierley.avro.schemas.Error.Builder setJobType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.jobType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'jobType' field has been set.
      * Jar that is throwing the error, i.e. Balor, Cadence, bRelevant, Decile, etc
      * @return True if the 'jobType' field has been set, false otherwise.
      */
    public boolean hasJobType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'jobType' field.
      * Jar that is throwing the error, i.e. Balor, Cadence, bRelevant, Decile, etc
      * @return This builder.
      */
    public com.brierley.avro.schemas.Error.Builder clearJobType() {
      jobType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'errorInfo' field.
      * @return The value.
      */
    public java.util.List<com.brierley.avro.schemas.exception> getErrorInfo() {
      return errorInfo;
    }

    /**
      * Sets the value of the 'errorInfo' field.
      * @param value The value of 'errorInfo'.
      * @return This builder.
      */
    public com.brierley.avro.schemas.Error.Builder setErrorInfo(java.util.List<com.brierley.avro.schemas.exception> value) {
      validate(fields()[2], value);
      this.errorInfo = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'errorInfo' field has been set.
      * @return True if the 'errorInfo' field has been set, false otherwise.
      */
    public boolean hasErrorInfo() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'errorInfo' field.
      * @return This builder.
      */
    public com.brierley.avro.schemas.Error.Builder clearErrorInfo() {
      errorInfo = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public Error build() {
      try {
        Error record = new Error();
        record.jobKey = fieldSetFlags()[0] ? this.jobKey : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.jobType = fieldSetFlags()[1] ? this.jobType : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.errorInfo = fieldSetFlags()[2] ? this.errorInfo : (java.util.List<com.brierley.avro.schemas.exception>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
